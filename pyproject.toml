[project]
name = "pyphot"
version = "1.6.0"
description = "A tool for computing photometry from spectra"
readme = "README.rst"
requires-python = ">=3.9"
dependencies = [
    "numpy>1.6",
    "scipy>0.9",
    "astropy>5.0",
    "tables>3.0",
]
authors = [{name="Morgan Fouesneau"}]
classifiers=[
      'Intended Audience :: Science/Research',
      'Operating System :: OS Independent',
      'Programming Language :: Python :: 3',
      'License :: OSI Approved :: MIT License',
      'Topic :: Scientific/Engineering :: Astronomy'
      ]

[build-system]
requires = ["setuptools>=60",
            "setuptools-scm>=6.2",
            "wheel",
            ]
build-backend = "setuptools.build_meta"

[tool.setuptools]
# By default, include-package-data is true in pyproject.toml, so you do
# NOT have to specify this line.
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]                 # list of folders that contain the packages (["."] by default)
include = ["pyphot*"]         # package names should match these glob patterns (["*"] by default)
exclude = ["unittests"]       # exclude packages matching these glob patterns (empty by default)
namespaces = true             # to disable scanning PEP 420 namespaces (true by default)

[tool.setuptools.package-data]
pyphot = ['*.fits', '*.txt', '*.dat', '*hdf5', 'libs/**']

[project.optional-dependencies]

testing = [
    "pytest",
    "pytest-doctestplus",
    "codecov",
    "pytest-cov"]

ci = [
  "toml",
  "ruff",
  "isort"]

docs = [
  "sphinx>=5.3",
  "sphinx-book-theme>=0.3.3",
  "sphinx-automodapi>=0.14",
  "sphinx_copybutton>=0.5",
  "sphinx-mdinclude>=0.6",
  "sphinxcontrib-htmlhelp>=2.1.0",
  "sphinxcontrib-serializinghtml>=2.0.0",
  "sphinx-tabs>=3.0",
  "myst-nb>=0.16.0",
  "sphinx-design>=0.6",
  # for syntax highlighting (https://nbsphinx.readthedocs.io/en/0.8.0/installation.html#Pygments-Lexer-for-Syntax-Highlighting)
  "IPython>=8.0",
  "matplotlib",
  "numpydoc"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64", "osx-64", "win-64"]

[tool.pixi.pypi-dependencies]
pyphot = { path = ".", editable = true }

[tool.pixi.environments]
default = { solve-group = "default" }
ci = { features = ["ci"], solve-group = "default" }
docs = { features = ["docs"], solve-group = "default" }
testing = { features = ["testing"], solve-group = "default" }

[tool.pixi.tasks]
ruff = { cmd = "ruff check --fix --show-fixes --output-format=github pyphot -o ruff_output.md", description = "ruff linter" }
unittests = { cmd = "python3 -m unittest unittests/test_quick.py && rm -f table.csv licks_table.csv", description = "CI unittests in current python version" }
joss = { cmd = "docker run --rm --volume $PWD/paper:/data --user $(id -u):$(id -g) --env JOURNAL=joss openjournals/inara && echo 'check paper/paper.pdf'", description = "Compile Joss paper" }
docs = { cmd = "cd doc && make apidoc && make html", description = "Build the documentation" }